backend.hstreamdb.producer.producer1.url = hstreams://172.100.0.10:6570
backend.hstreamdb.producer.producer1.stream = mqtt_connect
backend.hstreamdb.producer.producer1.grpc_pool_size = 4
backend.hstreamdb.producer.producer1.buffer_pool_size = 4
backend.hstreamdb.producer.producer1.writer_pool_size = 4
backend.hstreamdb.producer.producer1.batch_size = 10
backend.hstreamdb.producer.producer1.writer_grpc_timeout = 5000
backend.hstreamdb.producer.producer1.batch_flush_interval = 100
backend.hstreamdb.producer.producer1.batch_timeout = 10000
backend.hstreamdb.producer.producer1.ssl = on
backend.hstreamdb.producer.producer1.cacertfile = /opt/emqx/etc/certs/root_ca.crt
backend.hstreamdb.producer.producer1.certfile = /opt/emqx/etc/certs/hstream.crt
backend.hstreamdb.producer.producer1.keyfile = /opt/emqx/etc/certs/hstream.key
backend.hstreamdb.producer.producer1.verify = verify_none
#backend.hstreamdb.producer.producer1.server_name_indication = sni


backend.hstreamdb.producer.producer2.url = hstreams://172.100.0.10:6570
backend.hstreamdb.producer.producer2.stream = mqtt_message
backend.hstreamdb.producer.producer2.grpc_pool_size = 4
backend.hstreamdb.producer.producer2.buffer_pool_size = 8
backend.hstreamdb.producer.producer2.writer_pool_size = 16
backend.hstreamdb.producer.producer2.batch_size = 200
backend.hstreamdb.producer.producer2.writer_grpc_timeout = 5000
backend.hstreamdb.producer.producer2.batch_flush_interval = 100
backend.hstreamdb.producer.producer2.batch_timeout = 10000
backend.hstreamdb.producer.producer2.ssl = on
backend.hstreamdb.producer.producer2.cacertfile = /opt/emqx/etc/certs/root_ca.crt
backend.hstreamdb.producer.producer2.certfile = /opt/emqx/etc/certs/hstream.crt
backend.hstreamdb.producer.producer2.keyfile = /opt/emqx/etc/certs/hstream.key
backend.hstreamdb.producer.producer2.verify = verify_none
# backend.hstreamdb.producer.producer1.server_name_indication = sni


backend.hstreamdb.reader.reader1.url = hstreams://172.100.0.11:6572
backend.hstreamdb.reader.reader1.stream = mqtt_message
backend.hstreamdb.reader.reader1.grpc_pool_size = 4
backend.hstreamdb.reader.reader1.grpc_timeout = 5000
backend.hstreamdb.reader.reader1.pool_size = 4
backend.hstreamdb.reader.reader1.ssl = on
backend.hstreamdb.reader.reader1.cacertfile = /opt/emqx/etc/certs/root_ca.crt
backend.hstreamdb.reader.reader1.certfile = /opt/emqx/etc/certs/hstream.crt
backend.hstreamdb.reader.reader1.keyfile = /opt/emqx/etc/certs/hstream.key
backend.hstreamdb.reader.reader1.verify = verify_none
#backend.hstreamdb.reader.reader1.server_name_indication = sni


## Offset storage

## Interval (in milliseconds) for periodic flushing acked message ids.
##
## Value: Integer
backend.hstreamdb.offsets.flush_interval = 5000

## HStreamDB Backend Rules
## Online Offline events persistent
backend.hstreamdb.hook.client.connected.1    = {"producer": "producer1"}
backend.hstreamdb.hook.client.disconnected.1 = {"producer": "producer1"}

##
backend.hstreamdb.hook.session.subscribed.1  = {"topic": "sub1/#", "reader": "reader1"}
backend.hstreamdb.hook.session.subscribed.2  = {"topic": "pubsub/#", "reader": "reader1", "offline_opts": {"time_range": 10}}
# backend.hstreamdb.hook.session.subscribed.2  = {"topic": "pubsub/#", "reader": "reader1"}
backend.hstreamdb.hook.message.publish.1     = {"topic": "pubsub/#", "producer": "producer2"}
backend.hstreamdb.hook.message.acked.1       = {"topic": "pubsub/#"}